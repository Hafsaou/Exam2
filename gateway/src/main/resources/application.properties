spring.application.name=gateway
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
server.port=8083
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.cloud.gateway.routes[0].id=productService
#spring.cloud.gateway.routes[0].uri=lb://productService
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/product/all


spring.cloud.gateway.routes[1].id=eureka_Discovery
spring.cloud.gateway.routes[1].uri=http://localhost:8761
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[1].filters[0]=SetPath=/

#static resourses
spring.cloud.gateway.routes[2].id=eureka_Discovery-static
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/**

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-securityRelm
spring.main.web-application-type=reactive


#access rest api doc in html format
springdoc.swagger-ui.path=/swagger-ui.html
#http://localhost:8083/swagger.html
springdoc.api-docs.path=/api-docs

springdoc.swagger-ui.urls[0].name=Order Service
springdoc.swagger-ui.urls[0].url=/aggregate/order-service/v3/api-docs
springdoc.swagger-ui.urls[1].name=Product Service
springdoc.swagger-ui.urls[1].url=/aggregate/product-service/v3/api-docs
springdoc.swagger-ui.urls[2].name=Inventory Service
springdoc.swagger-ui.urls[2].url=/aggregate/inventory-service/v3/api-docs

#
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*


#Resilinece4j Properties
#resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
#resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
#resilience4j.circuitbreaker.configs.default.slidingWindowSize=1
#resilience4j.circuitbreaker.configs.default.failureRateThreshold=100
#resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=1

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true

# Sliding window type: COUNT_BASED will keep track of a number of recent calls to decide when to trigger a failure threshold.
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED

# Size of the sliding window (number of recent calls to track). Setting this to 1 will open the circuit after a single failed call.
resilience4j.circuitbreaker.configs.default.slidingWindowSize=1

# Failure rate threshold: The circuit breaker will open if this percentage of calls fail. 100% means the circuit breaker opens after just one failure.
resilience4j.circuitbreaker.configs.default.failureRateThreshold=100

# Time to keep the circuit open before transitioning to half-open state (to try a call again).
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s

# The number of calls that can be made in the half-open state before deciding whether to fully open or close the circuit.
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=1
# Automatically transition from open to half-open when the wait duration in the open state ends.
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true

# Minimum number of calls before the circuit breaker will evaluate the failure rate. Set to 1 to immediately consider failures.
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=1

resilience4j.circuitbreaker.instances.ProductServiceSwaggerCircuitBreaker.registerHealthIndicator=true
#resilience timeout properties

resilience4j.timelimiter.default.timeout-duration=3s
